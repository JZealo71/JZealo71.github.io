<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端学习随笔（1）</title>
      <link href="/2022/08/01/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0%E9%9A%8F%E7%AC%94(1)/"/>
      <url>/2022/08/01/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0%E9%9A%8F%E7%AC%94(1)/</url>
      
        <content type="html"><![CDATA[<h3 id="前端学习随笔（1）"><a href="#前端学习随笔（1）" class="headerlink" title="前端学习随笔（1）"></a>前端学习随笔（1）</h3><h4 id="一、前端三大标准：结构-HTML-、表现-CSS-、行为-JS"><a href="#一、前端三大标准：结构-HTML-、表现-CSS-、行为-JS" class="headerlink" title="一、前端三大标准：结构(HTML)、表现(CSS)、行为(JS)"></a>一、前端三大标准：结构(HTML)、表现(CSS)、行为(JS)</h4><h4 id="二、基本结构标签："><a href="#二、基本结构标签：" class="headerlink" title="二、基本结构标签："></a>二、基本结构标签：</h4><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208011211834.png" alt="image-20220801121149751"></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208011213639.png" alt="image-20220801121303590"></p><h4 id="三、常用快捷键（VScode）："><a href="#三、常用快捷键（VScode）：" class="headerlink" title="三、常用快捷键（VScode）："></a>三、常用快捷键（VScode）：</h4><ol><li><code>！+ enter/Tab</code>           生成html骨架标签</li><li><code>ctrl + ‘+’   </code>                放大代码（减号缩小代码）</li><li><code>ctrl + N </code>                   新建文件</li><li><code>ctrl + v     </code>                 直接换行粘贴</li></ol><h4 id="四、路径："><a href="#四、路径：" class="headerlink" title="四、路径："></a>四、路径：</h4><ul><li><p>相对路径：</p><ul><li>.代表当前目录，..代表上一级目录，&#x2F;代表下一级目录</li><li><strong>windows里面相对路径使用正斜杠，绝对路径使用反斜杠，网络中的绝对路径使用正斜杠</strong></li></ul></li><li><p>绝对路径：</p><ul><li>本地电脑：<code> &quot;D:\\web\img\logo.gif&quot;</code></li><li>网络地址：<code> &quot;http://www.itcast.cn/images/logo.gif&quot;</code></li></ul></li></ul><h4 id="五、HTML常用标签："><a href="#五、HTML常用标签：" class="headerlink" title="五、HTML常用标签：! ! !"></a>五、HTML常用标签：! ! !</h4><ol><li><p>标题标签：<code>&lt;h1&gt; - &lt;h6&gt;</code></p></li><li><p>段落标签： <code>&lt;p&gt;&lt;/p&gt;</code></p></li><li><p>换行标签：  <code>&lt;br /&gt;</code></p></li><li><p>文本格式化标签：</p><ul><li>加粗：<code>&lt;strong&gt;&lt;/strong&gt;</code>  或者 <code>&lt;b&gt;&lt;/b&gt;</code></li><li>倾斜：<code>&lt;em&gt;&lt;/em&gt;</code>  或者 <code>&lt;i&gt;&lt;/i&gt;</code></li><li>删除线：<code>&lt;del&gt;&lt;/del&gt;</code> 或者<code> &lt;s&gt;&lt;/s&gt;</code></li><li>下划线：<code>&lt;ins&gt;&lt;/ins&gt;</code> 或者 <code>&lt;u&gt;&lt;/u&gt;</code></li></ul></li><li><p>盒子标签：</p><ul><li>大盒子： <code>&lt;div&gt;&lt;/div&gt;</code>  （division）独占一行</li><li>小盒子： <code>&lt;span&gt;&lt;/span&gt;</code>   一行多个</li></ul></li><li><p>图像标签：</p><ul><li><code>&lt;img src=&quot;图像URL&quot; /&gt;</code>  src是<code>&lt;img&gt;</code>的必须属性</li><li><code>&lt;img src=&quot;图像URL&quot; alt=&quot;这个图象是这样的&quot; /&gt;</code>  alt用于在图像无法正常显示时提示图像的相应信息（替换文本）</li><li><code>&lt;img src=&quot;图像URL&quot; title=&quot;名字&quot; /&gt;</code> title用于鼠标放在图像上时显示图像名称（提示文本）</li><li>还有其他属性：width 、height 、border等，一般在CSS中设置，此处不适用</li></ul></li><li><p>超链接标签：</p><ul><li><p><code> &lt;a href=&quot;跳转目标&quot; target=&quot;目标窗口的弹出方式&quot;&gt; 文本或图像 &lt;/a&gt;</code>   (a是<code> anchor</code>的首字母)</p></li><li><p>href是必须属性，target用于指定链接页面的打开方式，_self为默认值，_blank为在新窗口打开</p></li><li><p>链接分类：</p><p>​    外部链接：<code>&lt;a href=&quot;http://www.baidu.com&quot;&gt; 百度 &lt;/a&gt;</code></p><p>​    内部链接：<code>&lt;a href=&quot;index.html&quot;&gt; 首页 &lt;/a&gt;</code></p><p>​    空链接：    <code>&lt;a href=&quot;#&quot;&gt; 首页 &lt;/a&gt;</code></p><p>​    下载链接：<code>&lt;a href=&quot;a.zip&quot;&gt; 下载 &lt;/a&gt;</code></p><p>​    网页元素链接：<code>&lt;a href=&quot;www.baidu.com&quot;&gt; &lt;img src=&quot;img.jpg&quot;&gt; &lt;/a&gt; </code></p><p>​    锚点链接： 点击链接，可快速定位到页面中的某个位置</p><p>​        首先在链接文本中的href属性中，设置属性值为#名字的形式，如<code>&lt;a href=&quot;#two&quot;&gt; 第二集 &lt;/a&gt;</code></p><p>​        找到目标位置，里面添加一个id属性&#x3D;刚才的名字，如<code>&lt;h3 id=&quot;two&quot;&gt; 第二集介绍 &lt;/h3&gt;</code></p></li></ul></li><li><p>注释标签：<code>&lt;!-- 注释语句 --&gt;</code> 一般使用快捷键<code>ctrl + /</code></p></li><li><p>特殊字符：</p><ul><li><p>空格符：<code>&amp;nbsp</code></p></li><li><p>小于号：<code>&amp;lt</code></p></li><li><p>大于号：<code>&amp;gt</code></p></li><li><p>其他：现用现查</p></li></ul></li><li><p>表格标签：</p><ul><li><p>包含表格、行、单元格三个元素</p></li><li><p>表格：<code>&lt;table&gt;&lt;/table&gt;</code>、行：<code>&lt;tr&gt;&lt;/tr&gt;</code>、单元格：<code>&lt;td&gt;&lt;/td&gt;</code></p></li><li><p>表头单元格：<code>&lt;th&gt;&lt;/th&gt;</code> （表头单元格里面的内容加粗居中显示）</p></li><li><p>表格结构标签：</p><p>​    表格头部：<code>&lt;thead&gt;&lt;/thead&gt;</code></p><p>​    表格主题：<code>&lt;tbody&gt;&lt;/tbody&gt;</code></p></li><li><p>表格结构：table –&gt; thead、tbody –&gt; th、tr –&gt; td</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208011449852.png" alt="image-20220801144934800"></p></li><li><p>合并单元格：</p><p>​    跨行合并：<code>rowspan=&quot;合并单元格的个数&quot;</code></p><p>​    跨列合并：<code>colspan=&quot;合并单元格的个数&quot;</code></p></li><li><p>目标单元格：</p><p>​    跨行：最上侧单元格为目标单元格，写合并代码</p><p>​    跨列：最左侧单元格为目标单元格，写合并代码</p></li><li><p>合并三部曲：<br>1. 确定跨行还是跨列<br> 2. 找到目标单元格，写上合并方式&#x3D;合并的单元格数量，比如：<code>&lt;td colspan=&quot;2&quot;&gt;&lt;/td&gt;</code><br> 3. 删除多余的单元格</p></li></ul></li><li><p>列表标签：</p><ul><li><p>特点：整齐、整洁、有序，作为布局更加自由和方便</p></li><li><p>分类：无序列表、有序列表、自定义列表</p></li><li><p>无序列表（！！！用的非常非常非常多）：</p><p>​    <img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208011511793.png" alt="image-20220801151125727"></p></li><li><p>有序列表：</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208011514867.png" alt="image-20220801151426805"></p></li><li><p>自定义列表（！！！）：</p><p>使用场景：</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208011516802.png" alt="image-20220801151659732"></p><p>基本语法：</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208011519706.png" alt="image-20220801151938653"></p></li></ul></li><li><p>表单标签：</p><ul><li><p>组成：表单域、表单控件（表单元素）、提示信息</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208011523133.png" alt="image-20220801152328066"></p></li><li><p>表单域：<code>&lt;form&gt;&lt;/form&gt;</code></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208011527765.png" alt="image-20220801152718686"></p></li><li><p>表单元素：input、select、textarea</p></li><li><p>input输入表单元素：<code>&lt;input type=&quot;属性值&quot; /&gt;</code> <strong>单标签</strong>，type为必须属性，不同属性指定不同的控件类型，常见的有：</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208012024255.png" alt="image-20220801202441172"></p><p>除了type属性外，<code>&lt;input&gt;</code>还有很多其他属性，常用属性如下：</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208012031170.png" alt="image-20220801203144077"></p><p>​    <img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208012040691.png" alt="image-20220801204055623"></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208012041871.png" alt="image-20220801204139798"></p></li><li><p>select下拉表单元素：</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208012108036.png" alt="image-20220801210810985"></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208012109066.png" alt="image-20220801210900008"></p></li><li><p>textarea文本域元素：</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img/Aug/202208012112722.png" alt="image-20220801211255671"></p></li></ul></li></ol><h4 id="更多标签，通过查询学习："><a href="#更多标签，通过查询学习：" class="headerlink" title="更多标签，通过查询学习："></a><strong>更多标签，通过查询学习</strong>：</h4><p>W3C: <a href="http://www.w3school.com.cn/">http://www.w3school.com.cn</a></p><p>MDN: <a href="https://developer.mozilla.org/zh-CN/">https://developer.mozilla.org/zh-CN/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Burpsuite抓取手机流量</title>
      <link href="/2022/07/31/%E4%BD%BF%E7%94%A8Burpsuite%E6%8A%93%E5%8F%96%E6%89%8B%E6%9C%BA%E6%B5%81%E9%87%8F/"/>
      <url>/2022/07/31/%E4%BD%BF%E7%94%A8Burpsuite%E6%8A%93%E5%8F%96%E6%89%8B%E6%9C%BA%E6%B5%81%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h4 id="使用burpsuite抓取手机流量"><a href="#使用burpsuite抓取手机流量" class="headerlink" title="使用burpsuite抓取手机流量"></a>使用burpsuite抓取手机流量</h4><ol><li><p><strong>查看电脑ip，并在burpsuite中将代理设置成本机ip</strong></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311428718.png" alt="img"></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311428713.png" alt="img"></p></li><li><p><strong>从burpsuite中导出证书，后面导入到手机中安装</strong></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311430250.png" alt="img"></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311430288.png" alt="img"></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311430722.png" alt="img"></p></li><li><p><strong>手机端设置代理（不同手机设置路径不同，下面以华为手机为例）</strong></p><p>长按连接的wifi，点击修改网络，将代理设置为手动，修改服务器主机名和端口号为burpsuite中设置的代理ip和端口号，保存即可</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311436731.png" alt="image-20220731143632586"></p></li><li><p><strong>手机端导入ca证书（以华为手机为例）</strong></p><p>简单的方法就是将电脑端证书传到手机中，微信qq均可，然后点击保存，使用证书安装器打开，验证身份（指纹密码等），输入证书名称和凭据用途，保存即可（此方式最快，还有比较常规的方法，自行百度）</p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311440554.png" alt="image-20220731144032426"></p></li><li><p><strong>最最最重要的一步！！！windows关闭防火墙，否则可能无法抓到包！！！</strong></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311442805.png" alt="image-20220731144241759"></p></li><li><p><strong>之后便可愉快地抓包了</strong></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311448119.png" alt="image-20220731144806992"></p><p><img src="https://jzealoimg.oss-cn-hangzhou.aliyuncs.com/Blog/img202207311448514.png" alt="image-20220731144831478"></p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻击操作汇总</title>
      <link href="/2022/07/23/%E6%94%BB%E5%87%BB%E6%93%8D%E4%BD%9C%E6%B1%87%E6%80%BB/"/>
      <url>/2022/07/23/%E6%94%BB%E5%87%BB%E6%93%8D%E4%BD%9C%E6%B1%87%E6%80%BB/</url>
      
        <content type="html"><![CDATA[<h3 id="攻击操作汇总（1）"><a href="#攻击操作汇总（1）" class="headerlink" title="攻击操作汇总（1）"></a>攻击操作汇总（1）</h3><h4 id="一、使用hping3进行泛洪攻击"><a href="#一、使用hping3进行泛洪攻击" class="headerlink" title="一、使用hping3进行泛洪攻击"></a>一、使用hping3进行泛洪攻击</h4><p><strong>简介：</strong>hping是面向命令行的用于生成和解析TCP&#x2F;IP协议数据包汇编&#x2F;分析的开源工具。作者是Salvatore Sanfilippo，界面灵感来自ping（8）unix命令，目前最新版是hping3，它支持TCP，UDP，ICMP和RAW-IP协议，具有跟踪路由模式，能够在覆盖的信道之间发送文件以及许多其他功能，支持使用tcl脚本自动化地调用其API。hping是安全审计、防火墙测试等工作的标配工具。hping优势在于能够定制数据包的各个部分，因此用户可以灵活对目标机进行细致地探测</p><ol><li><p><strong>ICMP攻击</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo hping3 --icmp --rand-source --flood 192.168.43.175</span><br></pre></td></tr></table></figure></li><li><p><strong>UDP攻击</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo hping3 -a 8.8.8.8 --udp -p 444 --flood 192.168.43.175</span><br></pre></td></tr></table></figure></li><li><p><strong>SYN攻击</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo hping3 -a 8.8.8.8 -S -p 888 --flood 192.168.43.175  <span class="comment"># -S 采用SYN攻击</span></span><br></pre></td></tr></table></figure></li><li><p><strong>ACK攻击</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo hping3 -a 8.8.8.8 -A -p 888 --flood 192.168.43.175</span><br></pre></td></tr></table></figure></li></ol><h4 id="二、使用Hydra进行弱口令爆破"><a href="#二、使用Hydra进行弱口令爆破" class="headerlink" title="二、使用Hydra进行弱口令爆破"></a>二、使用Hydra进行弱口令爆破</h4><p><strong>简介：</strong>Hydra是一款非常强大的暴力破解工具，它是由著名的黑客组织THC开发的一款开源暴力破解工具。Hydra是一个验证性质的工具，主要目的是：展示安全研究人员从远程获取一个系统认证权限。</p><ol><li><p><strong>telnet口令爆破</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -L user.txt -P passwd.txt 192.168.43.175 telnet  <span class="comment"># -L 加载账号字典 -P 加载密码字典 telnet 指定爆破协议（端口）</span></span><br></pre></td></tr></table></figure></li><li><p><strong>ssh口令爆破</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hydra -l admin -P passwd.txt 192.168.43.175 ssh  <span class="comment"># -l 指定用户名 -P 加载密码字典 ssh 指定爆破协议 （端口）</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="三、使用Ettercap进行中间人攻击"><a href="#三、使用Ettercap进行中间人攻击" class="headerlink" title="三、使用Ettercap进行中间人攻击"></a>三、使用Ettercap进行中间人攻击</h4><ol><li><p><strong>ARP欺骗</strong></p><p>攻击：打开图形化Ettercap，嗅探主机，将攻击对象地址添加target1，将伪装地址添加target2，实施ARP欺骗（ARP poisoning）</p><p>防御：</p><ul><li><p>安全软件及防火墙</p></li><li><p>电脑和网关路由器进行ARP双向绑定</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">arp -s 192.168.1.1 00-11-22-a1-c6-09</span><br></pre></td></tr></table></figure></li><li><p>网络设备（交换机或者路由器）开启动态ARP检测技术（对arp地址变更者进行判定及惩罚）。</p></li></ul></li><li><p><strong>DNS欺骗</strong></p><p>攻击：先实施ARP欺骗，如1步骤所示，然后编辑ettercap配置文件（&#x2F;etc&#x2F;ettercap&#x2F;etter.dns)，添加如下内容，最后点击插件中的dns_spoof。如果kali机开启apache2服务，则所有主机上网均会指向apache2的页面。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">* A 192.168.71.11  <span class="comment"># *代表诱导所有IP指向虚假A记录，后面的IP即是虚假DNS服务器IP（中间人）</span></span><br></pre></td></tr></table></figure><p><strong>避坑：</strong></p><ul><li>做实验时尽可能先清空dns缓存及浏览器上的数据缓存，以免影响实验。（无法上网时也可使用此方法排错）</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure><ul><li>win10如果手动设置DNS，需要将网关也添加到DNS中，再加一个DNS服务器（还不清楚为什么），否则无法上网。</li></ul></li></ol><h4 id="四、使用yersinia进行DHCP泛洪攻击"><a href="#四、使用yersinia进行DHCP泛洪攻击" class="headerlink" title="四、使用yersinia进行DHCP泛洪攻击"></a>四、使用yersinia进行DHCP泛洪攻击</h4><p><strong>discover泛洪攻击：</strong></p><p>攻击者：kali；   受害者：windows10（使用DHCP）获取地址</p><p>运行kali里面的yersinia工具，发起discover泛洪攻击，耗尽ip地址</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yersinia -G  <span class="comment"># G代表图形化</span></span><br></pre></td></tr></table></figure><p>此时win10若释放ip，将无法再获取到ip</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ipconfig /release</span><br><span class="line">ipconfig /renew</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ICMP基础知识</title>
      <link href="/2022/07/21/ICMP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2022/07/21/ICMP%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<p>参考知乎文章：<a href="https://zhuanlan.zhihu.com/p/254762952">网络排查利器Ping与Traceroute（Tianny）</a></p><h3 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h3><ol><li><p><strong>ICMP</strong> 全称 <strong>Internet Control Message Protocol</strong>，就是<strong>网际控制报文协议</strong>。ICMP 报文是封装在 IP 包里面的，因为传输指令的时候，肯定需要源地址和目标地址。</p></li><li><p>ICMP报文有很多的类型，<strong>主要分为两类，查询报文类型和差错报告报文类型</strong>。</p></li><li><p>查询报文类型简单来说就是查询方主动发送侦查协议，等待对方的应答。具体例子，见下面 ping 的使用；</p><p>差错报文类型会使用 ICMP 的规则，<strong>故意制造一些能够产生错误的场景</strong>，从而达到网络诊断的目的。具体例子，见下面 traceroute 的使用。</p></li><li><p><strong>ping</strong> 这个程序是使用了 ICMP 里面的 ECHO REQUEST（8） 和 ECHO REPLY （0）类型的。经常会遇到一个问题，如果不在我们的控制范围内，很多中间设备都是禁止 ping 的，<strong>但是 ping 不通不代表网络不通</strong>。这个时候就要使用 telnet，通过其他协议来测试网络是否通。</p></li><li><p>差错报文类型会使用 ICMP 规则故意制造一些能够产生错误的场景。<strong>Traceroute</strong> 故意设置特殊的 TTL，来追踪去往目的地时沿途经过的路由器。<strong>Traceroute 的参数指向某个目的IP地址，它会发送一个 UDP 的数据包</strong>。将 TTL 设置成1，也就是说一旦遇到一个路由器或者一个关卡，就表示它“牺牲”了，于是，返回一个ICMP包，也就是网络差错包，类型是时间超时。接下来将将 TTL 设置为 2，第一关过了第二关又“牺牲了”，依次类推，直到到达目的主机。这样，Traceroute 就拿到了所有的路由器 IP。<strong>当然，有的路由器压根不会回这个 ICMP。这也是 Traceroute一个公网的地址，看不到中间路由的原因。</strong></p><p>那又是怎么知道 UDP 有没有到达目的主机呢？Traceroute 程序会发送一份UDP 数据报给目的主机，<strong>但它会选择一个不可能的值作为 UDP 端口号（大于 30000 ）</strong>。当该数据报到达时，将使目的主机的 UDP 模块产生一份“端口不可达”错误 ICMP 报文。如果数据报没有到达，则可能是超时。</p></li><li><p>ICMP差错报告报文共有5种类型：</p><ul><li><strong>终点不可达</strong>。当路由器或者主机不能交付数据报时就像源点发送终点不可达报文。</li><li><strong>源点抑制</strong>。当路由器或者主机由于拥塞而丢弃数据报时，就向源点发送源点抑制报文，使源点知道应当把数据报的发送率放慢</li><li><strong>时间超过</strong>。当路由器受到生存时间TTL为零的数据报时，除丢弃该数据报外，还要向源点发送时间超过报文。当终点在预先规定的时间内不能收到一个数据报的全部数据报片时，就把已收到的数据报片都丢弃，并向源点发送时间超过报文。</li><li><strong>参数问题</strong>。当路由器或者目的主机收到的数据报的首部中的字段值不正确时，就丢弃该数据报，并向源点发送参数问题报文。</li><li><strong>重定向</strong>。路由器把改变路由报文发送给主机，让主机知道下次应将数据报发送给另外的路由器（可通过更好的路由）。</li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 协议 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/14/hello-world/"/>
      <url>/2022/02/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
